context TB {

	@Comment				: 'Customer Table'
    entity CUSTOMER {
        key CUST_ID			: Integer not null;
			@Comment		: 'CPF is similar to the Social Security Number in US, but for Brazilian Citizens and legally permanent foreigners'
        	CUST_CPF		: Integer64 not null;
            CUST_NAME		: String(50);
            CUST_BIRTH_DATE	: LocalDate;
			@Comment		: 'M-Male, F-Female'
            CUST_SEX		: String(1);
			@Comment		: '1-Silver , 2-Gold , 3-Platinum'
            CUST_SEGMENT	: String(1);
            CUST_COUNTRY	: String(2);
            CUST_STATE		: String(2);
			@Comment		: 'Life spend, everything the customer has already paid in credit card invoices'
            CUST_LIFE_SPEND	: Double;
			@Comment		: 'Average monthly spend'
            CUST_AVG_SPEND	: Double;
			@Comment		: 'Customer montlhy income'
            CUST_INCOME		: Double;
    } technical configuration {
      column store;
      unload priority 0;
    };

	@Comment					: 'Credit Card Table'
    entity CARD {
        key CARD_ID				: Integer not null;
        	CARD_NUM			: String(16) not null;
            CARD_VALIDITY		: String(5);
			@Comment			: '1-Visa, 2-Mastercard, 3-ELO'
            CARD_FLAG			: Integer;
        	@Comment			: '1-Black, 2-Platinum, 3-Gold, 4-Standard'
            CARD_CATEGORY		: Integer;
        	@Comment			: '0-No, 1-Yes'
            CARD_INTERNATIONAL	: Integer;
            CARD_LIMIT			: hana.SMALLINT;
        	@Comment			: '0-Blocked, 1-Active'
            CARD_STATUS			: Integer;
    } technical configuration {
      column store;
      unload priority 0;
    };
	
	@Comment				: 'Credit Card Transactions Table 1 billion records'
    entity CARD_TRANSACTIONS_1BI {
        key CT_ID			: Integer not null;
        key CT_DATE			: LocalDate not null;
        	CT_CARD_ID		: Integer not null;
            CT_CUST_ID		: Integer not null;
            CT_MER_ID		: Integer not null;
            CT_AMOUNT		: Double not null;
            @Comment		: 'Fraud: 0-No, 1-Yes'
            CT_FLAG_FRAUD	: Integer;
            @Comment		: 'Status: 0-Inactive, 1-Active'
            CT_STATUS		: Integer;
    } technical configuration {
      column store;
/*
      partition by range (year(CT_DATE)) 
			(partition '2008' <= values < '2019', 
			 partition '2019' <= values < '2021',
			 partition others);
*/
    };

	@Comment				: 'Credit Card Transactions Table 100 million records'
    entity CARD_TRANSACTIONS_100MI {
        key CT_ID			: Integer not null;
        key CT_DATE			: LocalDate not null;
        	CT_CARD_ID		: Integer not null;
            CT_CUST_ID		: Integer not null;
            CT_MER_ID		: Integer not null;
            CT_AMOUNT		: Double not null;
            @Comment		: 'Fraud: 0-No, 1-Yes'
            CT_FLAG_FRAUD	: Integer;
            @Comment		: 'Status: 0-Inactive, 1-Active'
            CT_STATUS		: Integer;
    } technical configuration {
      column store;
    };
    
	@Comment				: 'Credit Card Transactions Table 2 billion records'
    entity CARD_TRANSACTIONS_2BI {
        key CT_ID			: Integer not null;
        key CT_DATE			: LocalDate not null;
        	CT_CARD_ID		: Integer not null;
            CT_CUST_ID		: Integer not null;
            CT_MER_ID		: Integer not null;
            CT_AMOUNT		: Double not null;
            @Comment		: 'Fraud: 0-No, 1-Yes'
            CT_FLAG_FRAUD	: Integer;
            @Comment		: 'Status: 0-Inactive, 1-Active'
            CT_STATUS		: Integer;
    } technical configuration {
      column store;
    };


	@Comment						: 'Merchants Table'
    entity MERCHANT {
        key MER_ID					: Integer not null;
            MER_CNPJ				: Integer64 not null;
            @Comment				: '1-Retailer, 2-Services, 3-Tourism'
            MER_SEGMENT				: Integer;
            MER_ADDRESS				: String(50);
			@Comment				: 'GPS coordination for location - georeference'
			MER_POSITION			: hana.ST_POINT(4326);
			@Comment				: '1-Yes, 2-No'
			MER_FLAG_VIRTUAL_STORE	: Integer;
			MER_POSITION2			: hana.ST_POINT(3857);
			MER_POSITION3			: hana.ST_GEOMETRY(4326);
			MER_POSITION4			: hana.ST_GEOMETRY(3857);
    } technical configuration {
      column store;
      unload priority 0;
    };

	@Comment						: 'Tweets Table'
    entity TWEETS {
        key ID_STR			: String(25) not null;
            RETWEETED		: Boolean;
            SOURCE			: String(600);
            CREATED_AT		: String(100);
			TWEET			: String(512);
    } technical configuration {
      column store;
      unload priority 9;
    };
};

/*
Exemplos de grant específicos para a tabela:
{   "role":{   "name": "Localizacao_SELECT_WITH_GRANT_OPTION#",   "object_privileges":[   {      "name":"TB.Localizacao",      "type": "TABLE",      "privileges_with_grant_option":["SELECT"]   }   ]   } }
{   "role":{   "name": "TransacaoFinanceira_SELECT",   "object_privileges":[   {      "name":"TransacaoFinanceiraCV",      "type": "VIEW",      "privileges":["SELECT"]   }   ]   } }

Exemplos de grants com diferentes estratégias:
Dar grants como ADMIN do HDI:

set schema "SHOWCASEHDI#DI";
CREATE LOCAL TEMPORARY COLUMN TABLE SHOWCASEHDI#DI.#ROLES LIKE _SYS_DI.TT_SCHEMA_ROLES;
INSERT INTO SHOWCASEHDI#DI.#ROLES ( ROLE_NAME, PRINCIPAL_SCHEMA_NAME, PRINCIPAL_NAME ) VALUES ( 'showcasehdischema', '', 'SAPADMIN' );
INSERT INTO SHOWCASEHDI#DI.#ROLES ( ROLE_NAME, PRINCIPAL_SCHEMA_NAME, PRINCIPAL_NAME ) VALUES ( 'businessuser', '', 'SAPADMIN' );
INSERT INTO SHOWCASEHDI#DI.#ROLES ( ROLE_NAME, PRINCIPAL_SCHEMA_NAME, PRINCIPAL_NAME ) VALUES ( 'cardunmask', '', 'SAPADMIN' );
--CALL SHOWCASEHDI#DI.REVOKE_CONTAINER_SCHEMA_ROLES( SHOWCASEHDI#DI.#ROLES, _SYS_DI.T_NO_PARAMETERS, ?, ?, ?);
CALL SHOWCASEHDI#DI.GRANT_CONTAINER_SCHEMA_ROLES( SHOWCASEHDI#DI.#ROLES, _SYS_DI.T_NO_PARAMETERS, ?, ?, ?);
DROP TABLE SHOWCASEHDI#DI.#ROLES;

set schema "SHOWCASEHDI#DI";
create local temporary column table "#PRIVILEGES" like "_SYS_DI"."TT_SCHEMA_PRIVILEGES"; 
insert into "#PRIVILEGES" ("PRIVILEGE_NAME", "PRINCIPAL_SCHEMA_NAME", "PRINCIPAL_NAME") values ('SELECT', '', 'SAPADMIN');
insert into "#PRIVILEGES" ("PRIVILEGE_NAME", "PRINCIPAL_SCHEMA_NAME", "PRINCIPAL_NAME") values ('INSERT', '', 'SAPADMIN');
insert into "#PRIVILEGES" ("PRIVILEGE_NAME", "PRINCIPAL_SCHEMA_NAME", "PRINCIPAL_NAME") values ('UPDATE', '', 'SAPADMIN');
insert into "#PRIVILEGES" ("PRIVILEGE_NAME", "PRINCIPAL_SCHEMA_NAME", "PRINCIPAL_NAME") values ('DELETE', '', 'SAPADMIN');
insert into "#PRIVILEGES" ("PRIVILEGE_NAME", "PRINCIPAL_SCHEMA_NAME", "PRINCIPAL_NAME") values ('REFERENCES', '', 'SAPADMIN');
insert into "#PRIVILEGES" ("PRIVILEGE_NAME", "PRINCIPAL_SCHEMA_NAME", "PRINCIPAL_NAME") values ('EXECUTE', '', 'SAPADMIN');
--call "SHOWCASEHDI#DI"."GRANT_CONTAINER_SCHEMA_PRIVILEGES"("#PRIVILEGES", "_SYS_DI"."T_NO_PARAMETERS", ?, ?, ?);
call "SHOWCASEHDI#DI"."REVOKE_CONTAINER_SCHEMA_PRIVILEGES"("#PRIVILEGES", "_SYS_DI"."T_NO_PARAMETERS", ?, ?, ?);
drop table "#PRIVILEGES";

-- Criação dos remote sources linkeddatabase optimized
CREATE REMOTE SOURCE "SAOLEOPOLDO" ADAPTER "hanaodbc" CONFIGURATION '<?xml version="1.0" encoding="UTF-8"?>
<ConnectionProperties name="connection_properties">
<PropertyEntry name="adapterversion">1.0</PropertyEntry>
<PropertyEntry name="connectionmode">Adapter Properties</PropertyEntry>
<PropertyEntry name="driver">libodbcHDB.so</PropertyEntry>
<PropertyEntry name="server">saoleopoldo</PropertyEntry>
<PropertyEntry name="port">30015</PropertyEntry>
<PropertyEntry name="dml_mode">readonly</PropertyEntry>
<PropertyEntry name="linkeddatabase_mode">optimized</PropertyEntry>
<PropertyEntry name="extraadapterproperties"></PropertyEntry>
</ConnectionProperties>' WITH CREDENTIAL TYPE 'PASSWORD'

CREATE REMOTE SOURCE "PALOALTO" ADAPTER "hanaodbc" CONFIGURATION '<?xml version="1.0" encoding="UTF-8"?>
<ConnectionProperties name="connection_properties">
<PropertyEntry name="adapterversion">1.0</PropertyEntry>
<PropertyEntry name="connectionmode">Adapter Properties</PropertyEntry>
<PropertyEntry name="driver">libodbcHDB.so</PropertyEntry>
<PropertyEntry name="server">paloalto</PropertyEntry>
<PropertyEntry name="port">30015</PropertyEntry>
<PropertyEntry name="dml_mode">readonly</PropertyEntry>
<PropertyEntry name="linkeddatabase_mode">optimized</PropertyEntry>
<PropertyEntry name="extraadapterproperties"></PropertyEntry>
</ConnectionProperties>' WITH CREDENTIAL TYPE 'PASSWORD'

MER_POSITION			: hana.ST_POINT(4326); --or 3857

Rodar como SAPADMIN
GRANT CREATE VIRTUAL TABLE ON REMOTE SOURCE "SQLSERVER" TO SHOWCASEHDI#OO
GRANT CREATE VIRTUAL TABLE ON REMOTE SOURCE "PALOALTO" TO SHOWCASEHDI#OO;
GRANT LINKED DATABASE ON REMOTE SOURCE "PALOALTO" TO SHOWCASEHDI#OO;
ALTER SYSTEM ALTER CONFIGURATION ('indexserver.ini', 'SYSTEM') SET ('smart_data_access', 'enable_xda_view_unfolding') = 'false' WITH RECONFIGURE;

Internal Presales DWC Agents
=============================
HANA_SAOLEOPOLDO
zeus.hana.prod.us-east-1.whitney.dbaas.ondemand.com
22497
DP_MSG_HANA_SAOLEOPOLDO
<Y5qB+3Sz0r~+YDW

HANA_PALOALTO
zeus.hana.prod.us-east-1.whitney.dbaas.ondemand.com
22497
DP_MSG_HANA_PALOALTO
i9Q5c#X/rE]75Nd]

--NSE:
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" MERGE PARTITIONS;
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" PAGE LOADABLE CASCADE;
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" COLUMN LOADABLE CASCADE;
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" 
PARTITION BY RANGE (year("CT_DATE"))
	((partition '2006' <= values < '2018' , 
	  partition '2018' <= values < '2021',
	  partition others));			 
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" ALTER PARTITIION 1 PAGE LOADABLE;
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" ALTER PARTITIION 2 PAGE LOADABLE;
ALTER TABLE "SHOWCASEHDI"."TB.CARD_TRANSACTIONS_100MI" ALTER PARTITIION 3 COLUMN LOADABLE;


Pendencias:
Otimizar datatypes apos avaliar modelos estatísticos, principalmente o valor, flag fraude e estatus na tabela de transacoes
*/